group 'org.komamitsu'
version '1.1.0'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.4.5"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'signing'
apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8

def deployUsername = project.hasProperty('ossrhUsername') ? ossrhUsername : ''
def deployPassword = project.hasProperty('ossrhPassword') ? ossrhPassword : ''

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

findbugs {
    effort = 'max'
}

jmh {
    warmupIterations = 20
    iterations = 10
    fork = 2
    failOnError = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar, shadowJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: deployUsername, password: deployPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: deployUsername, password: deployPassword)
            }

            pom.project {
                name 'fast-uuid-parser'
                description "A UUID string parser that is 4 times faster than java.util.UUID.fromString()"
                packaging 'jar'
                url 'https://github.com/komamitsu/fast-uuid-parser'
                scm {
                    connection 'scm:git:git://github.com/komamitsu/fast-uuid-parser.git'
                    developerConnection 'scm:git:git@github.com:komamitsu/fast-uuid-parser.git'
                    url 'https://github.com/komamitsu/fast-uuid-parser'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'komamitsu'
                        name 'Mitsunori Komatsu'
                        email 'komamitsu@gmail.com'
                    }
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}
